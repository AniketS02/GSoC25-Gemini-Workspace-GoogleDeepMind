{
	"info": {
		"_postman_id": "eefa27af-54f9-4bb6-884d-62cb16a58716",
		"name": "Gemini API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42721875"
	},
	"item": [
		{
			"name": "Models",
			"item": []
		},
		{
			"name": "Text Generation",
			"item": [
				{
					"name": "Generate Text from Text Input",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"How does AI work?\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Thinking with Gemini 2.5",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"How does AI work?\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"thinkingConfig\": {\r\n            \"thinkingBudget\": 0\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "System Instructions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"system_instruction\": {\r\n        \"parts\": [\r\n            {\r\n                \"text\": \"You are a cat. Your name is Neko.\"\r\n            }\r\n        ]\r\n    },\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Hello there\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multimodal Inputs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Tell me about this instrument\"\r\n                },\r\n                {\r\n                    \"inline_data\": {\r\n                        \"mime_type\": \"image/jpeg\",\r\n                        \"data\": \"{{guitar image base64 encoded }}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Streaming Responses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"How does AI work?\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:streamGenerateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:streamGenerateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multi-turn conversations (Chat)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Hello\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"role\": \"model\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Great to meet you. What would you like to know?\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"I have two dogs in my house. How many paws are in my house?\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Streaming Multi-turn conversations (Chat) Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Hello\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"role\": \"model\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Great to meet you. What would you like to know?\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"I have two dogs in my house. How many paws are in my house?\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:streamGenerateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:streamGenerateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Variation Of Parameters",
			"item": [
				{
					"name": "top_p variation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// The purpose of topP is to change how the model selects tokens for output.\r\n// Tokens are selected from the most to least probable until the sum of their probabilities equals the topP value.\r\n// Lower topP (e.g., 0.3) = More focused, deterministic responses.\r\n// Higher topP (e.g., 0.9) = More diverse, creative responses.\r\n// Default topP value is 0.95, but here we use 0.8 for a balance between focus and creativity.\r\n{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Write a story about a magic backpack.\"\r\n                } // Request JSON payload\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"topP\": {{topP}} // Adjusts response diversity\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "top_k variation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// The purpose of topK is to change how the model selects tokens for output.\r\n// topK of 3 means that the next token is selected from among the 3 most probabl using the temperature\r\n{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Write a story about a magic backpack.\"\r\n                } // Request JSON payload\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"topK\": {{topK}} // Controls token selection\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "temperature variation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Explain how AI works\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"temperature\": {{temperature}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "stopSequences variation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// stopSequences - specifies the set of character sequences (up to 5) that will stop output generation\r\n// The stop sequence won't be included as part of the response.\r\n{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Write a story about a magic backpack.\"\r\n                } // Request JSON payload\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"stopSequences\": [\r\n            \"{{character}}\"\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "maxOutputTokens variation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// sets the maximum number of tokens to include in a candidate.\r\n{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Describe a futuristic city\"\r\n                } // Request JSON payload\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"maxOutputTokens\": {{maxOutputTokens}}// Limits response length\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Image Generation",
			"item": [
				{
					"name": "Text-and-image-to-image",
					"item": [
						{
							"name": "1.Get the Upload Url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let upload_url_header = pm.response.headers.get(\"x-goog-upload-url\"); // Get the upload URL from the response headers\r",
											"if (upload_url_header){\r",
											"pm.environment.set(\"upload_url_image\", upload_url_header);\r",
											"}\r",
											"else{\r",
											"    console.log(\"Unable to get the upload url , check the API KEY or Gemini-Testing environment variables value\")\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Goog-Upload-Command",
										"value": "start",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Header-Content-Type",
										"value": "{{MIME_TYPE}}",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Protocol",
										"value": "resumable",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": {\r\n        \"display_name\": \"{{Display_Name}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{host}}/upload/{{version}}/files",
									"protocol": "https",
									"host": [
										"{{host}}"
									],
									"path": [
										"upload",
										"{{version}}",
										"files"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.Upload The Image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"if(response.file.uri){\r",
											"    pm.environment.set(\"file_uri_image\",response.file.uri);\r",
											"}\r",
											"else{\r",
											"    console.log(\"Unable to get the file_uri_pdf, kindly check the audio uploaded ,upload_url_video and the headers\")\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Goog-Upload-Offset",
										"value": "0",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Command",
										"value": "upload, finalize",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"url": {
									"raw": "{{upload_url_image}}",
									"host": [
										"{{upload_url_image}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.Generate Content",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"'Hi, This is a picture of me. Can you add a llama next to me\"\r\n                },\r\n                {\r\n                    \"inline_data\": {\r\n                        \"mime_type\": \"{{MIME_TYPE}}\",\r\n                        \"data\": {{file_uri_image}}\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"responseModalities\": [\r\n            \"TEXT\",\r\n            \"IMAGE\"\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "text-to-image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Hi, can you create a 3d rendered image of a pig with wings and a top hat flying over a happy futuristic scifi city with lots of greenery?\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"responseModalities\": [\r\n            \"TEXT\",\r\n            \"IMAGE\"\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Image using Imagen 3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Goog-Upload-Command",
								"value": "start",
								"type": "text"
							},
							{
								"key": "X-Goog-Upload-Header-Content-Type",
								"value": "{{MIME_TYPE}}",
								"type": "text"
							},
							{
								"key": "X-Goog-Upload-Protocol",
								"value": "resumable",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instances\": [\r\n        {\r\n            \"prompt\": \"Robot holding a red skateboard\"\r\n        }\r\n    ],\r\n    \"parameters\": {\r\n        \"sampleCount\": 4\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:predict",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:predict"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Video Generation",
			"item": [
				{
					"name": "Generate video using Veo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instances\": [\r\n        {\r\n            \"prompt\": \"Panning wide shot of a calico kitten sleeping in the sunshine\"\r\n        }\r\n    ],\r\n    \"parameters\": {\r\n        \"aspectRatio\": \"16:9\",\r\n        \"personGeneration\": \"dont_allow\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:predictLongRunning",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:predictLongRunning"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Speech Generation",
			"item": [
				{
					"name": "Single-speaker text-to-speech",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Say cheerfully: Have a wonderful day!\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"responseModalities\": [\r\n            \"AUDIO\"\r\n        ],\r\n        \"speechConfig\": {\r\n            \"voiceConfig\": {\r\n                \"prebuiltVoiceConfig\": {\r\n                    \"voiceName\": \"Kore\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"model\": \"gemini-2.5-flash-preview-tts\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multi-speaker text-to-speech",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"TTS the following conversation between Joe and Jane: Joe: Hows it going today Jane Jane: Not too bad, how about you?\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"responseModalities\": [\r\n            \"AUDIO\"\r\n        ],\r\n        \"speechConfig\": {\r\n            \"multiSpeakerVoiceConfig\": {\r\n                \"speakerVoiceConfigs\": [\r\n                    {\r\n                        \"speaker\": \"Joe\",\r\n                        \"voiceConfig\": {\r\n                            \"prebuiltVoiceConfig\": {\r\n                                \"voiceName\": \"Kore\"\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        \"speaker\": \"Jane\",\r\n                        \"voiceConfig\": {\r\n                            \"prebuiltVoiceConfig\": {\r\n                                \"voiceName\": \"Puck\"\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"model\": \"gemini-2.5-flash-preview-tts\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Structured Output",
			"item": [
				{
					"name": "Configuring a schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"List a few popular cookie recipes, and include the amounts of ingredients.\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"responseMimeType\": \"application/json\",\r\n        \"responseSchema\": {\r\n            \"type\": \"ARRAY\",\r\n            \"items\": {\r\n                \"type\": \"OBJECT\",\r\n                \"properties\": {\r\n                    \"recipeName\": {\r\n                        \"type\": \"STRING\"\r\n                    },\r\n                    \"ingredients\": {\r\n                        \"type\": \"ARRAY\",\r\n                        \"items\": {\r\n                            \"type\": \"STRING\"\r\n                        }\r\n                    }\r\n                },\r\n                \"propertyOrdering\": [\r\n                    \"recipeName\",\r\n                    \"ingredients\"\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Thinking",
			"item": [
				{
					"name": "Generating content with thinking",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Explain the concept of Occam's Razor and provide a simple, everyday example.\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Thinking budgets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Provide a list of 3 famous physicists and their key contributions\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"generationConfig\": {\r\n        \"thinkingConfig\": {\r\n            \"thinkingBudget\": 1024\r\n        //Thinking off:\r\n         //\"thinkingBudget\": 0\r\n         //Turn on dynamic thinking:\r\n         //\"thinkingBudget\": -1\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Function Calling",
			"item": [
				{
					"name": "Schedule Meeting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Schedule a meeting with Bob and Alice for 03/27/2025 at 10:00 AM about the Q3 planning.\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"tools\": [\r\n        {\r\n            \"functionDeclarations\": [\r\n                {\r\n                    \"name\": \"schedule_meeting\",\r\n                    \"description\": \"Schedules a meeting with specified attendees at a given time and date.\",\r\n                    \"parameters\": {\r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"attendees\": {\r\n                                \"type\": \"array\",\r\n                                \"items\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"description\": \"List of people attending the meeting.\"\r\n                            },\r\n                            \"date\": {\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Date of the meeting (e.g., '2024-07-29')\"\r\n                            },\r\n                            \"time\": {\r\n                                \"type\": \"string\",\r\n                                \"description\": \"Time of the meeting (e.g., '15:00')\"\r\n                            },\r\n                            \"topic\": {\r\n                                \"type\": \"string\",\r\n                                \"description\": \"The subject or topic of the meeting.\"\r\n                            }\r\n                        },\r\n                        \"required\": [\r\n                            \"attendees\",\r\n                            \"date\",\r\n                            \"time\",\r\n                            \"topic\"\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Weather",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"What is the temperature in London?\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"tools\": [\r\n        {\r\n            \"functionDeclarations\": [\r\n                {\r\n                    \"name\": \"get_current_temperature\",\r\n                    \"description\": \"Gets the current temperature for a given location.\",\r\n                    \"parameters\": {\r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"location\": {\r\n                                \"type\": \"string\",\r\n                                \"description\": \"The city name, e.g. San Francisco\"\r\n                            }\r\n                        },\r\n                        \"required\": [\r\n                            \"location\"\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Chart",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Create a bar chart titled Quarterly Sales with data: Q1: 50000, Q2: 75000, Q3: 60000.\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"tools\": [\r\n        {\r\n            \"functionDeclarations\": [\r\n                {\r\n                    \"name\": \"create_bar_chart\",\r\n                    \"description\": \"Creates a bar chart given a title, labels, and corresponding values.\",\r\n                    \"parameters\": {\r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"title\": {\r\n                                \"type\": \"string\",\r\n                                \"description\": \"The title for the chart.\"\r\n                            },\r\n                            \"labels\": {\r\n                                \"type\": \"array\",\r\n                                \"items\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"description\": \"List of labels for the data points (e.g.[Q1, Q2, Q3]).\"\r\n                            },\r\n                            \"values\": {\r\n                                \"type\": \"array\",\r\n                                \"items\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"description\": \"List of numerical values corresponding to the labels (e.g., [50000, 75000, 60000]).\"\r\n                            }\r\n                        },\r\n                        \"required\": [\r\n                            \"title\",\r\n                            \"labels\",\r\n                            \"values\"\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{host}}/{{version}}/models/{{model}}:generateContent",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{version}}",
								"models",
								"{{model}}:generateContent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Document Understanding",
			"item": []
		},
		{
			"name": "Image Understanding",
			"item": []
		},
		{
			"name": "Video Understanding",
			"item": []
		},
		{
			"name": "Audio Understanding",
			"item": []
		},
		{
			"name": "Code Execution",
			"item": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{vault:api key}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "query",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}